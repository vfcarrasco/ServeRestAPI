{
	"info": {
		"_postman_id": "3b59ff89-0843-4102-a07d-d00198e06bc1",
		"name": "ServeRest v1.1",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "9233660"
	},
	"item": [
		{
			"name": "Caminho feliz",
			"item": [
				{
					"name": "Listar usuários cadastrados",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": "{{BaseURL}}/usuarios",
						"description": "# Get Users\n\nThis endpoint is used to retrieve a list of users.\n\n## Request\n\n- Method: GET\n    \n- URL: {{BaseURL}}/usuarios\n    \n\n## Response\n\nThe response will contain a list of user objects, including their details such as user ID, name, email, and other relevant information.\n\nExample response:\n\n``` json\n[\n    {\n        \"id\": 123,\n        \"name\": \"John Doe\",\n        \"email\": \"johndoe@example.com\",\n        ...\n    },\n    {\n        \"id\": 456,\n        \"name\": \"Jane Smith\",\n        \"email\": \"janesmith@example.com\",\n        ...\n    },\n    ...\n]\n\n ```"
					},
					"response": []
				},
				{
					"name": "Cadastrar usuário",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar Status code 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Validar mensagem de cadastro realizada com sucesso\", function() {\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Cadastro realizado com sucesso\");\r",
									"});\r",
									"\r",
									"pm.test(\"Capturar o id do usuário\", function(){\r",
									"    pm.globals.set(\"userid\", pm.response.json()._id);\r",
									"});\r",
									"\r",
									"pm.test(\"Schema valido\", function(){\r",
									"    pm.expect(tv4.validate(pm.response.json(), pm.globals.get('schemaCadastrarUsuario'))).to.be.true;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.unset(\"schemaCadastrarUsuario\");\r",
									"\r",
									"pm.globals.set(\"schemaCadastrarUsuario\", {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"_id\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"message\",\r",
									"    \"_id\"\r",
									"  ]\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nome\": \"Vitor\",\n    \"email\": \"vitorcarrasco@gmail.com\",\n    \"password\": \"123456\",\n    \"administrador\": \"false\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/usuarios"
					},
					"response": []
				},
				{
					"name": "Cadastrar duplicado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar Status code 400\", function() {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Validar mensagem de e-mail já esta sendo usuado\", function() {\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Este email já está sendo usado\");\r",
									"});\r",
									"\r",
									"pm.test(\"Schema valido\", function(){\r",
									"    pm.expect(tv4.validate(pm.response.json(), pm.globals.get('schemaUsuarioduplicado'))).to.be.true;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.unset(\"schemaUsuarioduplicado\");\r",
									"\r",
									"pm.globals.set(\"schemaUsuarioduplicado\", {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"message\"\r",
									"  ]\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nome\": \"Vitor\",\n    \"email\": \"vitorcarrasco@gmail.com\",\n    \"password\": \"123456\",\n    \"administrador\": \"false\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/usuarios"
					},
					"response": []
				},
				{
					"name": "Buscar usuário por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Schema valido\", function(){\r",
									"    pm.expect(tv4.validate(pm.response.json(), pm.globals.get('schemaBuscaUsuario'))).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Validar o id retornado corretamente\", function(){\r",
									"    pm.expect(pm.response.json()._id).to.eql(pm.globals.get(\"userid\"));\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"pm.globals.unset(\"schemaBuscaUsuario\");\r",
									"\r",
									"pm.globals.set(\"schemaBuscaUsuario\",{\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"nome\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"email\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"password\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"administrador\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"_id\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"nome\",\r",
									"    \"email\",\r",
									"    \"password\",\r",
									"    \"administrador\",\r",
									"    \"_id\"\r",
									"  ]\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": "{{BaseURL}}/usuarios/{{userid}}"
					},
					"response": []
				},
				{
					"name": "Editar usuário com sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Schema valido\", function(){\r",
									"    pm.expect(tv4.validate(pm.response.json(), pm.globals.get('schemaEditarUsuario'))).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Validar mensagem de alterado com sucesso\", function() {\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Registro alterado com sucesso\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.unset(\"schemaEditarUsuario\");\r",
									"\r",
									"pm.globals.set(\"schemaEditarUsuario\",{\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"message\"\r",
									"  ]\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nome\": \"Vitor\",\n    \"email\": \"vitorcarrasco@gmail.com\",\n    \"password\": \"123456\",\n    \"administrador\": \"true\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/usuarios/{{userid}}"
					},
					"response": []
				},
				{
					"name": "Buscar usuário atualizado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Validar usuário como adminstrador\", function(){\r",
									"     pm.expect(pm.response.json().administrador).to.equal(\"true\")\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": "{{BaseURL}}/usuarios/{{userid}}"
					},
					"response": []
				},
				{
					"name": "Login administrador",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar mensagem de login realizado com sucesso\", function() {\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Login realizado com sucesso\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    const token = pm.response.json().authorization;\r",
									"    pm.environment.set(\"token_adm\", token);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"vitorcarrasco@gmail.com\",\n  \"password\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/login"
					},
					"response": []
				},
				{
					"name": "Listar produtos cadastrados",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": "{{BaseURL}}/produtos"
					},
					"response": []
				},
				{
					"name": "Cadastrar produto sucesso",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"    url: pm.environment.get(\"BaseURL\") + \"/login\",\r",
									"    method: \"POST\",\r",
									"    body: {\r",
									"        mode: \"raw\",\r",
									"        options: {\r",
									"            raw:{\r",
									"                language: \"json\"\r",
									"            }\r",
									"        },\r",
									"        raw: JSON.stringify ({\r",
									"            email: \"vitorcarrasco@gmail.com\",\r",
									"            password: \"123456\"\r",
									"        })\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.sendRequest(postRequest, function(err,res){\r",
									"    console.log(res.json())\r",
									" })"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar status code 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Cadastro realizado com sucesso\", function() {\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Cadastro realizado com sucesso\");\r",
									"});\r",
									"\r",
									"pm.test(\"Capturar o id do produto\", function(){\r",
									"    pm.globals.set(\"productid\", pm.response.json()._id);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token_adm}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nome\": \"{{$randomProductName}}\",\n  \"preco\": 470,\n  \"descricao\": \"Mouse\",\n  \"quantidade\": 381\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/produtos"
					},
					"response": []
				},
				{
					"name": "Buscar produto por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Capturar o id do usuário\", function(){\r",
									"    pm.globals.set(\"productid\", pm.response.json()._id);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": "{{BaseURL}}/produtos/{{productid}}"
					},
					"response": []
				},
				{
					"name": "Editar produto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validar mensagem de alterado com sucesso\", function() {\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Registro alterado com sucesso\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token_adm}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nome\": \"{{$randomProductName}}\",\n  \"preco\": 470,\n  \"descricao\": \"Mouse\",\n  \"quantidade\": 381\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/produtos/{{productid}}"
					},
					"response": []
				},
				{
					"name": "Listar carrinhos cadastrados",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token_homolog}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": "{{BaseURL}}/carrinhos"
					},
					"response": []
				},
				{
					"name": "Cadastrar carrinho com sucesso",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"    url: pm.environment.get(\"BaseURL\") + \"/login\",\r",
									"    method: \"POST\",\r",
									"    body: {\r",
									"        mode: \"raw\",\r",
									"        options: {\r",
									"            raw:{\r",
									"                language: \"json\"\r",
									"            }\r",
									"        },\r",
									"        raw: JSON.stringify ({\r",
									"            email: \"vitorcarrasco@gmail.com\",\r",
									"            password: \"123456\"\r",
									"        })\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.sendRequest(postRequest, function(err,res){\r",
									"    console.log(res.json())\r",
									" })"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Capturar o id do produto\", function(){\r",
									"    pm.globals.set(\"basketid\", pm.response.json()._id);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token_adm}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"produtos\": [\n    {\n      \"idProduto\": \"{{productid}}\",\n      \"quantidade\": 1\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/carrinhos"
					},
					"response": []
				},
				{
					"name": "Excluir carrinho",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token_adm}}"
							}
						],
						"url": "{{BaseURL}}/carrinhos/concluir-compra"
					},
					"response": []
				},
				{
					"name": "Excluir produto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validar mensagem de excluido com sucesso\", function() {\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Registro excluído com sucesso\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token_adm}}"
							}
						],
						"url": "{{BaseURL}}/produtos/{{productid}}"
					},
					"response": []
				},
				{
					"name": "Excluir usuário com sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validar mensagem de excluido com sucesso\", function() {\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Registro excluído com sucesso\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": "{{BaseURL}}/usuarios/{{userid}}"
					},
					"response": []
				},
				{
					"name": "Buscar usuário não existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar Status code 400\", function() {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Validar mensagem de usuário não encontrado\", function() {\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Usuário não encontrado\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": "{{BaseURL}}/usuarios/{{userid}}"
					},
					"response": []
				}
			]
		},
		{
			"name": "Geração de massa",
			"item": [
				{
					"name": "Gerar nova pessoa",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"console.log (pm.response.json().results[0].name.first )\r",
									"pm.globals.set(\"userName\", pm.response.json().results[0].name.first )\r",
									"\r",
									"console.log (pm.response.json().results[0].email)\r",
									"pm.globals.set(\"userEmail\", pm.response.json().results[0].email )\r",
									"\r",
									"console.log( pm.response.json().results[0].login.password)\r",
									"pm.globals.set(\"userPassword\", pm.response.json().results[0].login.password )"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "https://randomuser.me/api/",
						"description": "This endpoint makes an HTTP GET request to retrieve random user data from the randomuser.me API.\n\n### Request\n\nNo request body parameters are required for this endpoint.\n\n### Response\n\nThe response will contain a JSON object with random user data, including details such as name, email, gender, and location."
					},
					"response": []
				}
			]
		},
		{
			"name": "Login",
			"item": [
				{
					"name": "Login senha invalida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar status code 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Validar mensagem de erro\", function() {\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Email e/ou senha inválidos\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"vitorcarrasco@gmail.com\",\n  \"password\": \"12345678\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/login"
					},
					"response": []
				},
				{
					"name": "Login com token ausente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar mensagem de login realizado com sucesso\", function() {\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Login realizado com sucesso\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    const token = pm.response.json().authorization;\r",
									"    pm.environment.set(\"token_naoadm\", token);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IkNoYXJpdHkuUnVub2xmc2RvdHRpckBob3RtYWlsLmNvbSIsInBhc3N3b3JkIjoidVpVeWVoYVAzMEliVUtkIiwiaWF0IjoxNzMwMzMwMDE2LCJleHAiOjE3MzAzMzA2MTZ9.REZL6Bv96G-xqvZPlFKUbIwFnmGFz-RiDfHIZjPk9rY"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"caroline_argento@hotmail.com\",\n  \"password\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/login"
					},
					"response": []
				},
				{
					"name": "Login não administrador",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar mensagem de login realizado com sucesso\", function() {\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Login realizado com sucesso\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    const token = pm.response.json().authorization;\r",
									"    pm.environment.set(\"token_naoadm\", token);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IkNoYXJpdHkuUnVub2xmc2RvdHRpckBob3RtYWlsLmNvbSIsInBhc3N3b3JkIjoidVpVeWVoYVAzMEliVUtkIiwiaWF0IjoxNzMwMzMwMDE2LCJleHAiOjE3MzAzMzA2MTZ9.REZL6Bv96G-xqvZPlFKUbIwFnmGFz-RiDfHIZjPk9rY"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"caroline_argento@hotmail.com\",\n  \"password\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/login"
					},
					"response": []
				}
			]
		},
		{
			"name": "Produtos",
			"item": [
				{
					"name": "Cadastrar produto com falha - token ausente",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar status code 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Validar mensagem de token ausente\", function() {\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nome\": \"{{$randomProductName}}\",\n  \"preco\": 470,\n  \"descricao\": \"Mouse\",\n  \"quantidade\": 381\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/produtos"
					},
					"response": []
				},
				{
					"name": "Cadastrar produto com falha - Usuário não administrador",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar status code 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Validar mensagem de cadasgtro realizada com sucesso\", function() {\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Rota exclusiva para administradores\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token_naoadm}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nome\": \"{{$randomProductName}}\",\n  \"preco\": 470,\n  \"descricao\": \"Mouse\",\n  \"quantidade\": 381\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/produtos"
					},
					"response": []
				},
				{
					"name": "Buscar produto por ID alterado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": "{{BaseURL}}/produtos/{{productid}}"
					},
					"response": []
				}
			]
		},
		{
			"name": "Carrinhos",
			"item": [
				{
					"name": "Excluir carrinho e retornar produtos para o estoque",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "123"
							}
						],
						"url": "{{BaseURL}}/carrinhos/cancelar-compra"
					},
					"response": []
				},
				{
					"name": "Buscar carrinho por ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": "{{BaseURL}}/carrinhos/qbMqntef4iTOwWfg"
					},
					"response": []
				}
			]
		}
	]
}